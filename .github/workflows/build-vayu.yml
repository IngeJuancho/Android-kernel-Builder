name: Build Vayu Kernel

on:
  workflow_dispatch:
    inputs:
      kernel_branch:
        description: 'Kernel branch'
        required: true
        default: 'lineage-21'
        type: choice
        options:
          - lineage-20
          - lineage-21
          - lineage-22
          - main
      
      compiler:
        description: 'Compiler'
        required: true
        default: 'proton-clang'
        type: choice
        options:
          - proton-clang
          - aosp-clang

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Free Disk Space
      run: |
        echo "üßπ Liberando espacio..."
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        df -h
        
    - name: Setup Build Environment
      run: |
        echo "üì¶ Instalando dependencias..."
        sudo apt-get update -qq
        
        sudo apt-get install -y --no-install-recommends \
          bc \
          bison \
          build-essential \
          ca-certificates \
          ccache \
          curl \
          flex \
          git \
          libelf-dev \
          libssl-dev \
          python3 \
          wget \
          zip \
          zlib1g-dev
        
        echo "‚úÖ Entorno listo!"
        
    - name: Setup ccache
      run: |
        echo "‚ö° Configurando ccache..."
        mkdir -p ~/.ccache
        echo "max_size = 5G" > ~/.ccache/ccache.conf
        echo "compression = true" >> ~/.ccache/ccache.conf
        ccache -s
        
    - name: Clone Kernel Source
      run: |
        echo "üì• Clonando kernel de Vayu..."
        git clone --depth=1 \
          https://github.com/AnymoreProject/android_kernel_vayu \
          -b ${{ inputs.kernel_branch }} kernel
        
        cd kernel
        echo "‚úÖ Kernel clonado: $(git log -1 --oneline)"
        
    - name: Get Kernel Version
      id: version
      run: |
        cd kernel
        VERSION=$(make kernelversion 2>/dev/null || echo "unknown")
        COMMIT=$(git rev-parse --short HEAD)
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "commit=${COMMIT}" >> $GITHUB_OUTPUT
        echo "üìã Versi√≥n: ${VERSION} (${COMMIT})"
        
    - name: Clone Proton Clang
      if: inputs.compiler == 'proton-clang'
      run: |
        echo "üî® Descargando Proton Clang..."
        mkdir -p toolchain
        cd toolchain
        
        # Descargar √∫ltima versi√≥n
        git clone --depth=1 https://github.com/kdrag0n/proton-clang clang
        
        echo "‚úÖ Compilador listo: $(clang/bin/clang --version | head -n1)"
        
    - name: Clone AOSP Clang
      if: inputs.compiler == 'aosp-clang'
      run: |
        echo "üî® Descargando AOSP Clang..."
        mkdir -p toolchain/clang
        cd toolchain
        
        # Usar versi√≥n estable
        wget -q https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master/clang-r487747c.tar.gz
        tar -xzf clang-r487747c.tar.gz -C clang
        rm clang-r487747c.tar.gz
        
        echo "‚úÖ AOSP Clang listo"
        
    - name: Verify Defconfig
      run: |
        echo "üîç Verificando defconfig..."
        cd kernel